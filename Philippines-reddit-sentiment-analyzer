from IPython import display
import math
from pprint import pprint
import pandas as pd
import numpy as np
import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer as SIA
import matplotlib.pyplot as plt
import seaborn as sns
import praw
###
#   This is a simple sentiment analysis for reddit submissions and comments under the /r/Philippines subreddit thread.
#   by: Rayven Ingles and Franklin Okiya, BSCS 4 Students of University of the Philippines Cebu
#   This is the solution to our Machine Problem in partial completion of our CMSC 176 - Natural Language Processing course.
###

# dependencies
# we will only use a read-only crawler using praw API hence there will be no need for a username/password pair
reddit = praw.Reddit(*PM SENT*)
nltk.download('vader_lexicon')  #to make sure the lexicon is up to date
# todo: update and set the attributes of the graph here. remove this comment once done.
sns.set(style='darkgrid', context='talk', palette='Dark2')

subreddit_data = set()      # create our data set
results = []                # to be used later to store results made by the sentiment intensity analyzer
sentiment_analyzer = SIA()  # initialize sentiment intensity analyzer
# initialize the file writer to save the comment data in a raw text file
file = open("sentiment_data_raw.txt",'w',encoding='utf-8')
# crawls through the first 200 submissions in the specific reddit subthread and saves the entire commment forest
for submission in reddit.subreddit('Philippines').hot(limit=200):
    subreddit_data.add(submission.title)
    file.write(submission.title+'\n')
    submission.comments.replace_more(limit=None)
    for comment in submission.comments.list():
        #print(comment.body)
        subreddit_data.add(comment.body)
        file.write(comment.body+'\n')
    display.clear_output()

print(len(subreddit_data))
# close the file handle. Once it gets past this line, the file 'sentiment_data_raw.txt' can be accessed for processing
file.close()
# applying sentiment analysis on the set
for text in subreddit_data:
    polarity = sentiment_analyzer.polarity_scores(text)
    polarity['text'] = text
    results.append(polarity)

pprint(results[:3], width=100)
# converting results into a data frame using Pandas
data_frame = pd.DataFrame.from_records(results)
data_frame.head()
data_frame['label'] = 0
data_frame.loc[data_frame['compound'] > 0.2, 'label'] = 1
data_frame.loc[data_frame['compound'] < -0.2, 'label'] = -1
data_frame.head()

data_frame2 = data_frame[['text', 'label']]
data_frame2.to_csv('reddit_text_with_labels.csv', mode='w', encoding='utf-8', index=False)

print(data_frame.label.value_counts())
print(data_frame.label.value_counts(normalize=True) * 100)

# plot the graph using mathlib.pyplot then styled using seaborn
# todo: improve the styling of our bar graph output here
fig, ax = plt.subplots(figsize=(8, 8))
counts = data_frame.label.value_counts(normalize=True) * 100
sns.barplot(x=counts.index, y=counts, ax=ax)
# todo: you may add more labels like graph title, etc. here:
ax.set_xticklabels(['Negative', 'Neutral', 'Positive'])
ax.set_ylabel("Percentage")

plt.show()
